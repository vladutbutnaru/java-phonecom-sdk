/**
 * Phone.com API
 * This is a Phone.com api Swagger definition
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apisupport@phone.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import static org.junit.Assert.assertNotNull;

import java.util.Arrays;
import java.util.List;

import org.junit.Before;
import org.junit.Test;

import io.swagger.client.ApiException;
import io.swagger.client.helper.TestConfig;
import io.swagger.client.model.ListAvailableNumbers;

/**
 * API tests for AvailablenumbersApi
 */
public class AvailableNumbersApiTest {

    private final AvailableNumbersApi api = new AvailableNumbersApi();

    @Before
    public void initTest() {
    	TestConfig.setAuthorization();
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAvailablePhoneNumbersTest() throws ApiException {
        List<String> filtersPhoneNumber = Arrays.asList("asd");
        List<String> filtersCountryCode = Arrays.asList("asd");
        List<String> filtersNpa = Arrays.asList("asd");
        List<String> filtersNxx = Arrays.asList("asd");
        List<String> filtersXxxx = Arrays.asList("asd");
        List<String> filtersCity = Arrays.asList("asd");
        List<String> filtersProvince = Arrays.asList("asd");
        List<String> filtersCountry = Arrays.asList("asd");
        List<String> filtersPrice = Arrays.asList("asd");
        List<String> filtersCategory = null;
        String sortInternal = "asc";
        String sortPrice = "asc";
        String sortPhoneNumber = "asc";
        Integer limit = 25;
        Integer offset = 0;
        String fields = null;
        ListAvailableNumbers response = api.listAvailablePhoneNumbers(filtersPhoneNumber, filtersCountryCode, filtersNpa, filtersNxx, filtersXxxx, filtersCity, filtersProvince, filtersCountry, filtersPrice, filtersCategory, sortInternal, sortPrice, sortPhoneNumber, limit, offset, fields);
        assertNotNull(response.getItems());
        assertNotNull(response.getFilters());
        assertNotNull(response.getLimit());
        assertNotNull(response.getOffset());
        assertNotNull(response.getSort());
        assertNotNull(response.getTotal());
    }
    
}
