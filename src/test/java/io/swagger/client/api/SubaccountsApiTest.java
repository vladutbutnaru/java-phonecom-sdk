/**
 * Phone.com API
 * This is a Phone.com api Swagger definition
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apisupport@phone.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import static org.junit.Assert.assertNotNull;

import java.util.List;

import org.junit.Before;
import org.junit.Test;

import io.swagger.client.ApiException;
import io.swagger.client.helper.TestConfig;
import io.swagger.client.model.AccountFull;
import io.swagger.client.model.Address;
import io.swagger.client.model.ContactSubaccount;
import io.swagger.client.model.CreateSubaccountParams;
import io.swagger.client.model.ListAccounts;

/**
 * API tests for SubaccountsApi
 */
public class SubaccountsApiTest {

    private final SubaccountsApi api = new SubaccountsApi();

    @Before
    public void initTest() {
    	TestConfig.setAuthorization();
    }
    
    /**
     * Add a subaccount for the authenticated user or client
     *
     * This service shows the details of an individual Subaccount.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAccountSubaccountTest() throws ApiException {
        Integer accountId = 1315091;
        CreateSubaccountParams data = new CreateSubaccountParams();
        ContactSubaccount x = new ContactSubaccount();
        Address ad  = new Address();
        ad.setCity("Poway");
        ad.setCountry("US");
        ad.setLine1("14282 Danielson Street");
        ad.setPostalCode("92064");
        ad.setProvince("CA");
        x.setAddress(ad);
        x.setAlternateEmail("ad@yahoo.com");
        x.setCompany("Company");
        x.setName("Teddy3");
        x.setPhone("+18585551113");
        x.setPrimaryEmail("test3@phone.com");
        data.setBillingContact(x);
        data.setContact(x);
        data.setPassword("Teddy3");
        data.setUsername(TestConfig.nextRandom());
      
        AccountFull response = api.createAccountSubaccount(accountId, data);
        assertNotNull(response);
    }
    
    /**
     * Get a list of subaccounts for the authenticated user or client
     *
     * This service lists the Subaccount of the authenticated client. In most cases, there will not be any.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAccountSubaccountsTest() throws ApiException {
        Integer accountId = 1315091;
        List<String> filtersId = null;
        String sortId = null;
        Integer limit = null;
        Integer offset = null;
        String fields = null;
        ListAccounts response = api.listAccountSubaccounts(accountId, filtersId, sortId, limit, offset, fields);
        assertNotNull(response.getFilters());
        assertNotNull(response.getItems());
        assertNotNull(response.getLimit());
        assertNotNull(response.getOffset());
        assertNotNull(response.getSort());
        assertNotNull(response.getTotal());
    }
    
}
