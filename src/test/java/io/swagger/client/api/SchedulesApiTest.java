/**
 * Phone.com API
 * This is a Phone.com api Swagger definition
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apisupport@phone.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import static org.junit.Assert.assertNotNull;

import java.util.List;

import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;

import io.swagger.client.ApiException;
import io.swagger.client.helper.TestConfig;
import io.swagger.client.model.ListSchedules;
import io.swagger.client.model.ScheduleFull;

/**
 * API tests for SchedulesApi
 */
public class SchedulesApiTest {

    private final SchedulesApi api = new SchedulesApi();

    @Before
    public void initTest() {
    	TestConfig.setAuthorization();
    }
    
    /**
     * Show details of an individual schedule
     *
     * This service shows the details of an individual schedule.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    @Ignore("Tested in other test")
    public void getAccountScheduleTest() throws ApiException {
        Integer accountId = null;
        Integer scheduleId = null;
        ScheduleFull response = api.getAccountSchedule(accountId, scheduleId);
        assertNotNull(response);
    }
    
    /**
     * Get a list of schedules for an account
     *
     * See Intro to Schedules for more info on the properties.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listGetAccountSchedulesTest() throws ApiException {

        Integer accountId = 1315091;
        List<String> filtersId = null;
        List<String> filtersName = null;
        String sortId = null;
        String sortName = null;
        Integer limit = null;
        Integer offset = null;
        String fields = null;
        ListSchedules response = api.listAccountSchedules(accountId, filtersId, filtersName, sortId, sortName, limit, offset, fields);
        assertNotNull(response.getFilters());
        List<ScheduleFull> items = response.getItems();
		assertNotNull(items);
        assertNotNull(response.getLimit());
        assertNotNull(response.getOffset());
        assertNotNull(response.getSort());
        assertNotNull(response.getTotal());

        if (items.size() > 0) {
	        Integer firstItemId = items.get(0).getId();
			ScheduleFull schedule = api.getAccountSchedule(accountId, firstItemId);
			assertNotNull(schedule);
			assertNotNull(schedule.getId());
			assertNotNull(schedule.getName());
        }
    }
    
}
